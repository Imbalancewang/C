#include<stdio.h>
#include<malloc.h>
#include<math.h>
#include<stdlib.h>
#define  MAXSIZE  1000000
typedef struct
{
    int mval;
    int nval;
}*stack,size;
int ackerman(int m,int n)
{
    if(m==0)
        return n+1;
    else if(n==0)
        return ackerman(m-1,1);
    else
        return ackerman(m-1,ackerman(m,n-1));
}
int ack_stack(int m,int n)
{
    int top=0,ack1;
    stack s;
    s=(stack)malloc(sizeof(size)*MAXSIZE);
    s[top].mval=m;
    s[top].nval=n;
    do
    {
        while(s[top].mval)
        {
            while(s[top].nval)
            {
                top++;
                s[top].mval=s[top-1].mval;
                s[top].nval=s[top-1].nval-1;
            }
            s[top].mval--;
            s[top].nval=1;
        }
        if(top>0)
        {
            top--;
            s[top].mval--;
            s[top].nval=s[top+1].nval+1;
        }
    }while(top!=0 || s[top].mval!=0);
    ack1=s[top].nval+1;top--;
    return ack1;
}
int main()
{
    int n,m;
    while(~scanf("%d %d",&n,&m))
    {
      //  printf("%d\n",ackerman(n,m));
        printf("%d\n",ack_stack(n,m));
    }
}

